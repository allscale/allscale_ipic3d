#/bin/bash

# check whether correct results are computed by ipic3d
# return 0 if results match reference data, return 1 if results are incorrect

# stop on any error
set -e

# set the number of threads to use to 4 if not set to something else already
export NPROC="${NPROC:-4}"


# default to "test" problem case if no other case was specified, print usage if requested
CASE="test"
if [ "$#" -eq 1 ]; then
	case "$1" in 
		"-h"|"-help"|"--help")
			# find all available input problem cases and print them separated by "|", drop the file extension, remove trailing "|"
			echo "Usage: $0 <`find @PROJECT_SOURCE_DIR@/../inputs/*.inp  -printf '%f|' | sed 's/\.inp//g' | sed 's/.$//'`>"
			exit 1
			;;
	esac
	CASE="$1"
fi

echo "RESULT CHECK: Checking for problem case \"${CASE}\""

# prepare additional arguments
if [ ! -z "$RUNNING_IN_ALLSCALE_RUNTIME" ]; then
	export ADDITIONAL_ARGUMENTS="--hpx:threads=$NPROC --hpx:bind=none"
fi

# run application
NUM_WORKERS="$NPROC" @PROJECT_BINARY_DIR@/app/ipic3d @PROJECT_SOURCE_DIR@/../inputs/${CASE}.inp $ADDITIONAL_ARGUMENTS

# compare output
set +e
bash -c "diff <(sort ${CASE}.out) <(sort @PROJECT_SOURCE_DIR@/../outputs/${CASE}.static.out)"
RETVAL=$?
set -e

echo -n "RESULT CHECK: "
if [ ${RETVAL} -eq 0 ] ; then
	echo "[  OK  ] Computed solution matches reference for problem case \"${CASE}\""
else
	echo "[FAILED] Computed solution does not match reference for problem case \"${CASE}\"!"
fi

# exit with corresponding exit code
exit ${RETVAL}
